apiVersion: apps/v1
kind: Deployment
metadata:
  name: cpu-demo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cpu-demo
  template:
    metadata:
      labels:
        app: cpu-demo
    spec:
      containers:
      - name: cpu-demo
        image: vish/stress # tiny image for CPU stress testing
        resources:
          requests:
            cpu: 100m
          limits:
            cpu: 500m
        args: ["-cpus", "0"]   # idle by default

      - name: hammer
        image: python:3.9-slim
        resources:
          requests:
            cpu: 100m
          limits:
            cpu: 500m
        command: ["/bin/sh", "-c"]
        args:
          - |
            set -ex
            apt-get update && apt-get install -y stress-ng
            pip3 install flask
            cat > /server.py <<'EOF'
            from flask import Flask
            import subprocess
            app = Flask(__name__)
            @app.route("/start")
            def start():
                #subprocess.Popen(["stress", "-c", "1", "-t", "10s"])
                subprocess.Popen(["stress-ng", "--cpu", "1", "--timeout", "10s"])
                return "CPU stress started!\n"
            if __name__ == "__main__":
                app.run(host="0.0.0.0", port=8080)
            EOF
            exec python3 /server.py

        ports:
        - containerPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: cpu-demo
spec:
  selector:
    app: cpu-demo
  ports:
  - protocol: TCP
    port: 8080       # service port
    targetPort: 8080 # pod's hammer container port

